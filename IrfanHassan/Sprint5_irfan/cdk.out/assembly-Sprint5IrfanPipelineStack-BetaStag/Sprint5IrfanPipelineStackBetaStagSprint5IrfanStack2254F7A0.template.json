{
  "Resources": {
    "lambdaroleDFE21467": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSlambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/CloudWatchFullAccess"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/lambda-role/Resource"
      }
    },
    "lambdaroleDefaultPolicyB1623966": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "irfanurltableF418808E",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "lambdaroleDefaultPolicyB1623966",
        "Roles": [
          {
            "Ref": "lambdaroleDFE21467"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/lambda-role/DefaultPolicy/Resource"
      }
    },
    "FirstHellammbdaDB9FC3BC": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-irfan51-assets-315997497220-us-east-2",
          "S3Key": "f3ebaa3ee1c26a561586085731c3b4efb400a91a8be229559f42875223a6481b.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "lambdaroleDFE21467",
            "Arn"
          ]
        },
        "Handler": "Monitor_webhealth.lambda_handler",
        "Runtime": "python3.6"
      },
      "DependsOn": [
        "lambdaroleDefaultPolicyB1623966",
        "lambdaroleDFE21467"
      ],
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/FirstHellammbda/Resource",
        "aws:asset:path": "../asset.f3ebaa3ee1c26a561586085731c3b4efb400a91a8be229559f42875223a6481b",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "MonitorwebHealth28B40C7A": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "FirstHellammbdaDB9FC3BC",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/MonitorwebHealth/Resource"
      }
    },
    "MonitorwebHealthAllowEventRuleSprint5IrfanPipelineStackBetaStagSprint5IrfanStackFirstHellammbdaA691798BD828CDF7": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "FirstHellammbdaDB9FC3BC",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "MonitorwebHealth28B40C7A",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/MonitorwebHealth/AllowEventRuleSprint5IrfanPipelineStackBetaStagSprint5IrfanStackFirstHellammbdaA691798B"
      }
    },
    "irfanhassantable9BB9EE06": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "Timestamp",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "Timestamp",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanhassantable/Resource"
      }
    },
    "lambdaroledb8F96FA37": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonDynamoDBFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSNSFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonS3FullAccess"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/lambda-role-db/Resource"
      }
    },
    "lambdaroledbDefaultPolicyAF35499B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "irfanhassantable9BB9EE06",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "irfanurltableF418808E",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "lambdaroledbDefaultPolicyAF35499B",
        "Roles": [
          {
            "Ref": "lambdaroledb8F96FA37"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/lambda-role-db/DefaultPolicy/Resource"
      }
    },
    "secondHellammbda69B4B3E3": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-irfan51-assets-315997497220-us-east-2",
          "S3Key": "f3ebaa3ee1c26a561586085731c3b4efb400a91a8be229559f42875223a6481b.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "lambdaroledb8F96FA37",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "table_name": {
              "Ref": "irfanhassantable9BB9EE06"
            }
          }
        },
        "Handler": "dynamodb_lambda.lambda_handler",
        "Runtime": "python3.6"
      },
      "DependsOn": [
        "lambdaroledbDefaultPolicyAF35499B",
        "lambdaroledb8F96FA37"
      ],
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/secondHellammbda/Resource",
        "aws:asset:path": "../asset.f3ebaa3ee1c26a561586085731c3b4efb400a91a8be229559f42875223a6481b",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "secondHellammbdaAllowInvokeSprint5IrfanPipelineStackBetaStagSprint5IrfanStackWebHealthC2B754CE30EFEA1E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "secondHellammbda69B4B3E3",
            "Arn"
          ]
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "WebHealthF43679AB"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/secondHellammbda/AllowInvoke:Sprint5IrfanPipelineStackBetaStagSprint5IrfanStackWebHealthC2B754CE"
      }
    },
    "secondHellammbdaWebHealth1AFE3F74": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "WebHealthF43679AB"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "secondHellammbda69B4B3E3",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/secondHellammbda/WebHealth/Resource"
      }
    },
    "WebHealthF43679AB": {
      "Type": "AWS::SNS::Topic",
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/WebHealth/Resource"
      }
    },
    "WebHealthmuhammadirfanhassansskipqorgE7DB7B4C": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "email",
        "TopicArn": {
          "Ref": "WebHealthF43679AB"
        },
        "Endpoint": "muhammad.irfan.hassan.s@skipq.org"
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/WebHealth/muhammad.irfan.hassan.s@skipq.org/Resource"
      }
    },
    "urllammbdaA6D25810": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-irfan51-assets-315997497220-us-east-2",
          "S3Key": "f3ebaa3ee1c26a561586085731c3b4efb400a91a8be229559f42875223a6481b.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "lambdaroledb8F96FA37",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "table_name": {
              "Ref": "irfanurltableF418808E"
            }
          }
        },
        "Handler": "s3_dynamodb_lambda.lambda_handler",
        "Runtime": "python3.6"
      },
      "DependsOn": [
        "lambdaroledbDefaultPolicyAF35499B",
        "lambdaroledb8F96FA37"
      ],
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/urllammbda/Resource",
        "aws:asset:path": "../asset.f3ebaa3ee1c26a561586085731c3b4efb400a91a8be229559f42875223a6481b",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "irfanurltableF418808E": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "URL",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "URL",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanurltable/Resource"
      }
    },
    "urls3bucketNotificationsD406101B": {
      "Type": "Custom::S3BucketNotifications",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "urls3bucket7E0A19A6"
        },
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*"
              ],
              "Filter": {
                "Key": {
                  "FilterRules": [
                    {
                      "Name": "suffix",
                      "Value": ".json"
                    }
                  ]
                }
              },
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "urllammbdaA6D25810",
                  "Arn"
                ]
              }
            }
          ]
        },
        "Managed": true
      },
      "DependsOn": [
        "urls3bucketAllowBucketNotificationsToSprint5IrfanPipelineStackBetaStagSprint5IrfanStackurllammbdaB8226180F77EADC7"
      ],
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/urls3bucket/Notifications/Resource"
      }
    },
    "urls3bucket7E0A19A6": {
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/urls3bucket/Resource"
      }
    },
    "urls3bucketAllowBucketNotificationsToSprint5IrfanPipelineStackBetaStagSprint5IrfanStackurllammbdaB8226180F77EADC7": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "urllammbdaA6D25810",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": "315997497220",
        "SourceArn": {
          "Fn::GetAtt": [
            "urls3bucket7E0A19A6",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/urls3bucket/AllowBucketNotificationsToSprint5IrfanPipelineStackBetaStagSprint5IrfanStackurllammbdaB8226180"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
        "Code": {
          "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n    response_status = \"SUCCESS\"\n    error_message = \"\"\n    try:\n        props = event[\"ResourceProperties\"]\n        bucket = props[\"BucketName\"]\n        notification_configuration = props[\"NotificationConfiguration\"]\n        request_type = event[\"RequestType\"]\n        managed = props.get('Managed', 'true').lower() == 'true'\n        stack_id = event['StackId']\n\n        if managed:\n          config = handle_managed(request_type, notification_configuration)\n        else:\n          config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n        put_bucket_notification_configuration(bucket, config)\n    except Exception as e:\n        logging.exception(\"Failed to put bucket notification configuration\")\n        response_status = \"FAILED\"\n        error_message = f\"Error: {str(e)}. \"\n    finally:\n        submit_response(event, context, response_status, error_message)\n\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n\n  # find external notifications\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  # if delete, that's all we need\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\"\n    return notification\n\n  # otherwise, merge external with incoming config and augment with id\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n  return notifications\n\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    # if the notification was created by us, we know what id to expect\n    # so we can filter by it.\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n\n  return external_notifications\n\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n    response_body = json.dumps(\n        {\n            \"Status\": response_status,\n            \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n            \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n            \"StackId\": event[\"StackId\"],\n            \"RequestId\": event[\"RequestId\"],\n            \"LogicalResourceId\": event[\"LogicalResourceId\"],\n            \"NoEcho\": False,\n        }\n    ).encode(\"utf-8\")\n    headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n    try:\n        req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n        with urllib.request.urlopen(req) as response:\n            print(response.read().decode(\"utf-8\"))\n        print(\"Status code: \" + response.reason)\n    except Exception as e:\n        print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Timeout": 300
      },
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
      ],
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
      }
    },
    "ApiGateWayLambdaDFCB8872": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-irfan51-assets-315997497220-us-east-2",
          "S3Key": "f3ebaa3ee1c26a561586085731c3b4efb400a91a8be229559f42875223a6481b.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "lambdaroledb8F96FA37",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "table_name": {
              "Ref": "irfanurltableF418808E"
            }
          }
        },
        "Handler": "apigateway_lambda.lambda_handler",
        "Runtime": "python3.6"
      },
      "DependsOn": [
        "lambdaroledbDefaultPolicyAF35499B",
        "lambdaroledb8F96FA37"
      ],
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/ApiGateWayLambda/Resource",
        "aws:asset:path": "../asset.f3ebaa3ee1c26a561586085731c3b4efb400a91a8be229559f42875223a6481b",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "ApiGateWayLambdaInvokeServicePrincipalapigatewayamazonawscom13E72BEC": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGateWayLambdaDFCB8872",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/ApiGateWayLambda/InvokeServicePrincipal(apigateway.amazonaws.com)"
      }
    },
    "irfanAPIF74A924B": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "irfanAPI"
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Resource"
      }
    },
    "irfanAPICloudWatchRole3E4FADD6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/CloudWatchRole/Resource"
      }
    },
    "irfanAPIAccountF5378A20": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "irfanAPICloudWatchRole3E4FADD6",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "irfanAPIF74A924B"
      ],
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Account"
      }
    },
    "irfanAPIDeploymentF7C6FEF66e70ad75868d451e9e55f2f07c6827b5": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "irfanAPIF74A924B"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "irfanAPIproxyANY66FA4D93",
        "irfanAPIproxyEF5C0137",
        "irfanAPIANYA22D6884",
        "irfanAPIitemsDELETE07C867E0",
        "irfanAPIitemsGETE67E9CCF",
        "irfanAPIitemsPOSTAD552C46",
        "irfanAPIitemsPUTACCA18E7",
        "irfanAPIitemsAD4006AF"
      ],
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Deployment/Resource"
      }
    },
    "irfanAPIDeploymentStageprodAA466BF1": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "irfanAPIF74A924B"
        },
        "DeploymentId": {
          "Ref": "irfanAPIDeploymentF7C6FEF66e70ad75868d451e9e55f2f07c6827b5"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/DeploymentStage.prod/Resource"
      }
    },
    "irfanAPIproxyEF5C0137": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "irfanAPIF74A924B",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "irfanAPIF74A924B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/{proxy+}/Resource"
      }
    },
    "irfanAPIproxyANYApiPermissionSprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936DANYproxyC1A13853": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGateWayLambdaDFCB8872",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:315997497220:",
              {
                "Ref": "irfanAPIF74A924B"
              },
              "/",
              {
                "Ref": "irfanAPIDeploymentStageprodAA466BF1"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/{proxy+}/ANY/ApiPermission.Sprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936D.ANY..{proxy+}"
      }
    },
    "irfanAPIproxyANYApiPermissionTestSprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936DANYproxyDF650790": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGateWayLambdaDFCB8872",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:315997497220:",
              {
                "Ref": "irfanAPIF74A924B"
              },
              "/test-invoke-stage/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/{proxy+}/ANY/ApiPermission.Test.Sprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936D.ANY..{proxy+}"
      }
    },
    "irfanAPIproxyANY66FA4D93": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "irfanAPIproxyEF5C0137"
        },
        "RestApiId": {
          "Ref": "irfanAPIF74A924B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiGateWayLambdaDFCB8872",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/{proxy+}/ANY/Resource"
      }
    },
    "irfanAPIANYApiPermissionSprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936DANY6B056BEE": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGateWayLambdaDFCB8872",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:315997497220:",
              {
                "Ref": "irfanAPIF74A924B"
              },
              "/",
              {
                "Ref": "irfanAPIDeploymentStageprodAA466BF1"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/ANY/ApiPermission.Sprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936D.ANY.."
      }
    },
    "irfanAPIANYApiPermissionTestSprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936DANY2931A2DD": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGateWayLambdaDFCB8872",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:315997497220:",
              {
                "Ref": "irfanAPIF74A924B"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/ANY/ApiPermission.Test.Sprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936D.ANY.."
      }
    },
    "irfanAPIANYA22D6884": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "irfanAPIF74A924B",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "irfanAPIF74A924B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiGateWayLambdaDFCB8872",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/ANY/Resource"
      }
    },
    "irfanAPIitemsAD4006AF": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "irfanAPIF74A924B",
            "RootResourceId"
          ]
        },
        "PathPart": "items",
        "RestApiId": {
          "Ref": "irfanAPIF74A924B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/items/Resource"
      }
    },
    "irfanAPIitemsGETApiPermissionSprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936DGETitems79162C00": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGateWayLambdaDFCB8872",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:315997497220:",
              {
                "Ref": "irfanAPIF74A924B"
              },
              "/",
              {
                "Ref": "irfanAPIDeploymentStageprodAA466BF1"
              },
              "/GET/items"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/items/GET/ApiPermission.Sprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936D.GET..items"
      }
    },
    "irfanAPIitemsGETApiPermissionTestSprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936DGETitemsB85AFFA0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGateWayLambdaDFCB8872",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:315997497220:",
              {
                "Ref": "irfanAPIF74A924B"
              },
              "/test-invoke-stage/GET/items"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/items/GET/ApiPermission.Test.Sprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936D.GET..items"
      }
    },
    "irfanAPIitemsGETE67E9CCF": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "irfanAPIitemsAD4006AF"
        },
        "RestApiId": {
          "Ref": "irfanAPIF74A924B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiGateWayLambdaDFCB8872",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/items/GET/Resource"
      }
    },
    "irfanAPIitemsPUTApiPermissionSprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936DPUTitemsE4142394": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGateWayLambdaDFCB8872",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:315997497220:",
              {
                "Ref": "irfanAPIF74A924B"
              },
              "/",
              {
                "Ref": "irfanAPIDeploymentStageprodAA466BF1"
              },
              "/PUT/items"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/items/PUT/ApiPermission.Sprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936D.PUT..items"
      }
    },
    "irfanAPIitemsPUTApiPermissionTestSprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936DPUTitems42B87791": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGateWayLambdaDFCB8872",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:315997497220:",
              {
                "Ref": "irfanAPIF74A924B"
              },
              "/test-invoke-stage/PUT/items"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/items/PUT/ApiPermission.Test.Sprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936D.PUT..items"
      }
    },
    "irfanAPIitemsPUTACCA18E7": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "ResourceId": {
          "Ref": "irfanAPIitemsAD4006AF"
        },
        "RestApiId": {
          "Ref": "irfanAPIF74A924B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiGateWayLambdaDFCB8872",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/items/PUT/Resource"
      }
    },
    "irfanAPIitemsDELETEApiPermissionSprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936DDELETEitems23E5CD4C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGateWayLambdaDFCB8872",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:315997497220:",
              {
                "Ref": "irfanAPIF74A924B"
              },
              "/",
              {
                "Ref": "irfanAPIDeploymentStageprodAA466BF1"
              },
              "/DELETE/items"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/items/DELETE/ApiPermission.Sprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936D.DELETE..items"
      }
    },
    "irfanAPIitemsDELETEApiPermissionTestSprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936DDELETEitems64658D18": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGateWayLambdaDFCB8872",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:315997497220:",
              {
                "Ref": "irfanAPIF74A924B"
              },
              "/test-invoke-stage/DELETE/items"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/items/DELETE/ApiPermission.Test.Sprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936D.DELETE..items"
      }
    },
    "irfanAPIitemsDELETE07C867E0": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "ResourceId": {
          "Ref": "irfanAPIitemsAD4006AF"
        },
        "RestApiId": {
          "Ref": "irfanAPIF74A924B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiGateWayLambdaDFCB8872",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/items/DELETE/Resource"
      }
    },
    "irfanAPIitemsPOSTApiPermissionSprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936DPOSTitems96B54472": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGateWayLambdaDFCB8872",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:315997497220:",
              {
                "Ref": "irfanAPIF74A924B"
              },
              "/",
              {
                "Ref": "irfanAPIDeploymentStageprodAA466BF1"
              },
              "/POST/items"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/items/POST/ApiPermission.Sprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936D.POST..items"
      }
    },
    "irfanAPIitemsPOSTApiPermissionTestSprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936DPOSTitemsF00942E2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGateWayLambdaDFCB8872",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:315997497220:",
              {
                "Ref": "irfanAPIF74A924B"
              },
              "/test-invoke-stage/POST/items"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/items/POST/ApiPermission.Test.Sprint5IrfanPipelineStackBetaStagSprint5IrfanStackirfanAPI6D5E936D.POST..items"
      }
    },
    "irfanAPIitemsPOSTAD552C46": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "irfanAPIitemsAD4006AF"
        },
        "RestApiId": {
          "Ref": "irfanAPIF74A924B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiGateWayLambdaDFCB8872",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/irfanAPI/Default/items/POST/Resource"
      }
    },
    "AvailabiltyAlarmwwwskipqorg7696051F": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "WebHealthF43679AB"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Id": "m1",
            "Label": "availabilty_metric www.skipq.org",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "URL",
                    "Value": "www.skipq.org"
                  }
                ],
                "MetricName": "URL_Aailibilty",
                "Namespace": "irfanhassanSkipQ_WebHealth_Monitor"
              },
              "Period": 30,
              "Stat": "Average"
            },
            "ReturnData": true
          }
        ],
        "Threshold": 1
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/AvailabiltyAlarm www.skipq.org/Resource"
      }
    },
    "latencyAlarmwwwskipqorg116105C0": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "WebHealthF43679AB"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Id": "m1",
            "Label": "latency_metric www.skipq.org",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "URL",
                    "Value": "www.skipq.org"
                  }
                ],
                "MetricName": "URL_Latency",
                "Namespace": "irfanhassanSkipQ_WebHealth_Monitor"
              },
              "Period": 30,
              "Stat": "Average"
            },
            "ReturnData": true
          }
        ],
        "Threshold": 0.32
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/latencyAlarm www.skipq.org/Resource"
      }
    },
    "AvailabiltyAlarmwwwalibabacom3F67D7EB": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "WebHealthF43679AB"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Id": "m1",
            "Label": "availabilty_metric www.alibaba.com",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "URL",
                    "Value": "www.alibaba.com"
                  }
                ],
                "MetricName": "URL_Aailibilty",
                "Namespace": "irfanhassanSkipQ_WebHealth_Monitor"
              },
              "Period": 30,
              "Stat": "Average"
            },
            "ReturnData": true
          }
        ],
        "Threshold": 1
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/AvailabiltyAlarm www.alibaba.com/Resource"
      }
    },
    "latencyAlarmwwwalibabacom395B6622": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "WebHealthF43679AB"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Id": "m1",
            "Label": "latency_metric www.alibaba.com",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "URL",
                    "Value": "www.alibaba.com"
                  }
                ],
                "MetricName": "URL_Latency",
                "Namespace": "irfanhassanSkipQ_WebHealth_Monitor"
              },
              "Period": 30,
              "Stat": "Average"
            },
            "ReturnData": true
          }
        ],
        "Threshold": 0.32
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/latencyAlarm www.alibaba.com/Resource"
      }
    },
    "AvailabiltyAlarmwwwbinancecom9391ED13": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "WebHealthF43679AB"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Id": "m1",
            "Label": "availabilty_metric www.binance.com",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "URL",
                    "Value": "www.binance.com"
                  }
                ],
                "MetricName": "URL_Aailibilty",
                "Namespace": "irfanhassanSkipQ_WebHealth_Monitor"
              },
              "Period": 30,
              "Stat": "Average"
            },
            "ReturnData": true
          }
        ],
        "Threshold": 1
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/AvailabiltyAlarm www.binance.com/Resource"
      }
    },
    "latencyAlarmwwwbinancecom4587AABF": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "WebHealthF43679AB"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Id": "m1",
            "Label": "latency_metric www.binance.com",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "URL",
                    "Value": "www.binance.com"
                  }
                ],
                "MetricName": "URL_Latency",
                "Namespace": "irfanhassanSkipQ_WebHealth_Monitor"
              },
              "Period": 30,
              "Stat": "Average"
            },
            "ReturnData": true
          }
        ],
        "Threshold": 0.32
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/latencyAlarm www.binance.com/Resource"
      }
    },
    "AvailabiltyAlarmwwwyoutubecomD2374FBB": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "WebHealthF43679AB"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Id": "m1",
            "Label": "availabilty_metric www.youtube.com",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "URL",
                    "Value": "www.youtube.com"
                  }
                ],
                "MetricName": "URL_Aailibilty",
                "Namespace": "irfanhassanSkipQ_WebHealth_Monitor"
              },
              "Period": 30,
              "Stat": "Average"
            },
            "ReturnData": true
          }
        ],
        "Threshold": 1
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/AvailabiltyAlarm www.youtube.com/Resource"
      }
    },
    "latencyAlarmwwwyoutubecom0FC45DC2": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Ref": "WebHealthF43679AB"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Id": "m1",
            "Label": "latency_metric www.youtube.com",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "URL",
                    "Value": "www.youtube.com"
                  }
                ],
                "MetricName": "URL_Latency",
                "Namespace": "irfanhassanSkipQ_WebHealth_Monitor"
              },
              "Period": 30,
              "Stat": "Average"
            },
            "ReturnData": true
          }
        ],
        "Threshold": 0.32
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/latencyAlarm www.youtube.com/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/22Qy07DMBBFv6V716WqQGJH2ooViCjtDziToTWN7cgPQmT53/EjkYrEas71jO07d0u3u0f6sHpho1lDd9t4UBqpP1kGN1IZgzbihcsLOShprHZgSYNGOQ1IDp/ynj+cHZwNJL3lORPUN6ovU6nWqucwJVkokJ6JtmPUvzoJliuZevdcoxbcmKgCMbs1S3YMza6ipn7v4IZ2zwySgulSoUDwG2Wc9o2bPcQaSDdJJlTXUn9mbWlkiB/IOHxyrQHNh8XBH31WA4d8I0Hcc+AXZnFkE/VveZWYhq0GPgezYAWgnLTkiEOvJhFtpdM7lSLOVgosmebFaq1+pn8Tf0d7VV06mmnpBAK9ct3ILFypr3qmRbaRIIRA6imOy82OPtHn1ZfhfK2jPS6QNqX+AvUFzSsWAgAA"
      },
      "Metadata": {
        "aws:cdk:path": "Sprint5IrfanPipelineStack/BetaStag/Sprint5IrfanStack/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "irfanAPIEndpoint34A441CE": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "irfanAPIF74A924B"
            },
            ".execute-api.us-east-2.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "irfanAPIDeploymentStageprodAA466BF1"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/irfan51/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}